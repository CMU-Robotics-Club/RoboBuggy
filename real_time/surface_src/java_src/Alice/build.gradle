apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'checkstyle'
apply plugin: 'cobertura'
apply plugin: 'findbugs'


test.testLogging { exceptionFormat "full"; events "failed", "passed", "skipped" }

configurations.all {
    resolutionStrategy {
        force 'org.ow2.asm:asm:5.0.3'
        forcedModules = [ 'org.ow2.asm:asm:5.0.3' ]
    }
}

findbugs {
  toolVersion = "3.0.0"
}

checkstyle{
  toolVersion = "6.2"
  checkstyleMain.exclude '**/edu/cmu/cs/cs214/hw6/util/*'
  checkstyleMain.exclude '**/edu/cmu/cs/cs214/hw6/plugin/**'
}

repositories {
  mavenCentral()
  maven {
        url "http://www.sparetimelabs.com/maven2"
  }
}

dependencies {
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    //for basic cv stuff
    compile group: 'org.boofcv', name: 'all', version: '0.21'
    //for video caputre
    compile 'com.github.sarxos:webcam-capture:0.3.10'	
    //for pure java video encoding 
    compile 'org.jcodec:jcodec-javase:0.1.9'	
    
    compile project (':BuggyRos')
    //for jason object extraction from strings 
    
    compile group: 'com.google.code.gson', name: 'gson', version: '2.2.+'
    compile 'jfreechart:jfreechart:1.0.0'
    compile 'gov.nist.math:jama:1.0.2'
    compile 'org.eclipse.jetty.aggregate:jetty-all:9.2.7.v20150116'

    compile 'com.sparetimelabs:purejavacomm:1.0.1'
    compile 'net.java.dev.jna:jna:4.2.2'


    // TODO: this is stupid. find a way to use mavencentral repo.
    compile files('library/orsoncharts-1.4-eval-nofx.jar')

    compile files('library/JMapViewer.jar')
    compile files('library/jfreespace.jar')

}

uploadArchives {
    repositories {
        flatDir {
            dirs 'repos'
        }
    }
}

buildscript{ 
  repositories {
    mavenCentral()
  }

  dependencies {
    classpath 'net.saliman:gradle-cobertura-plugin:2.2.5'
  }
}
cobertura.coverageFormats = ['html', 'xml']
